/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import control.ControlCompraVenta;
import control.ControlStock;
import control.ControlUsuarios;
import modelodeDominio.Filtro;
import modelodeDominio.Producto;
import modelodeDominio.Usuario;
import tablas.TablaCarrito;
import tablas.TablaProductos;

/**
 *
 * @author acill
 */
public class VentanaPrincipal extends javax.swing.JFrame {

	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Usuario usuario;
	private LoginFrame login;
	private ControlUsuarios controlUsu;
	private ControlCompraVenta controllerCompraVenta;
	private ControlStock controllerStock;
	private modificarDatos modificarDatos;
	private AltaProducto altaProducto;
	//private BajaProducto bajaProducto;
	private AltaEncargados altaEncargado;
	private AltaEmpleado altaEmpleado;
	private ConsultarUsuarios bajaEmpleado;
	private ConsultarUsuarios bajaEncargado;
	private Devolucion devolucion;
	private ConsultarPedidos pedidos;
	private RegistroVentas ventas;
	private DarDeBajaA darDeBaja;
	private ConsultarUsuarios usuarios;
    /**
     * Creates new form VentanaPrincipal
     */
	
	TablaProductos tS = new TablaProductos();
    TablaCarrito tC = new TablaCarrito();
    
    /**
     * 
     * @param usu Usuario actualmente logueado 
     * @param controlUsu control de usuarios
     * @param controlCompra control de compra y venta
     * @param controlStock control de stock
     */
    public VentanaPrincipal(Usuario usu, ControlUsuarios controlUsu, ControlCompraVenta controlCompra, ControlStock controlStock) {
    	super("NAIK");
    	this.usuario = usu;
        this.controlUsu = controlUsu;
        this.controllerCompraVenta = controlCompra;
        this.controllerStock = controlStock;
        initComponents();
        
        tS.ver_tabla(tablaStock);
        tC.ver_tabla(tablaCarrito);
        
        this.actualizarTablaPrincipal();
        this.actualizarTablaCarrito();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        panelIzda = new javax.swing.JPanel();
        carritoLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        panelConScrollCarrito = new javax.swing.JScrollPane();
        tablaCarrito = new javax.swing.JTable();
        totalLabel = new javax.swing.JLabel();
        labelTotalConPuntosAEditar = new javax.swing.JLabel();
        totalConPuntosLabel = new javax.swing.JLabel();
        labelTotalAEditar = new javax.swing.JLabel();
        botonRealizarCompra = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        botonEliminarDelCarrito = new javax.swing.JButton();
        panelCentral = new javax.swing.JPanel();
        panelConScrollStock = new javax.swing.JScrollPane();
        tablaStock = new javax.swing.JTable();
        panelInferior = new javax.swing.JPanel();
        botonAnadirCarrito = new javax.swing.JButton();
        labelAnadirCarrito = new javax.swing.JLabel();
        panelDerecha = new javax.swing.JPanel();
        labelMarca = new javax.swing.JLabel();
        adidasCheckBox = new javax.swing.JCheckBox();
        pumaCheckBox = new javax.swing.JCheckBox();
        nikeCheckBox = new javax.swing.JCheckBox();
        newBalanceCheckBox = new javax.swing.JCheckBox();
        jSeparator4 = new javax.swing.JSeparator();
        tallaLabel = new javax.swing.JLabel();
        tallaTexto = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        modeloLabel = new javax.swing.JLabel();
        modeloTexto = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        precioLabel = new javax.swing.JLabel();
        precioTexto = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();
        botonFiltrar = new javax.swing.JButton();
        imagenNaik = new javax.swing.JLabel();
        barraMenu = new javax.swing.JMenuBar();
        menuUsuario = new javax.swing.JMenu();
        consultarPuntosMenu = new javax.swing.JMenuItem();
        modificarDatosMenu = new javax.swing.JMenuItem();
        darseDeBajaMenu = new javax.swing.JMenuItem();
        darDeBajaAMenu = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        cerrarSesionMenu = new javax.swing.JMenuItem();
        menuStock = new javax.swing.JMenu();
        realizarDevolucionMenu = new javax.swing.JMenuItem();
        altaProductoMenu = new javax.swing.JMenuItem();
        bajaProductoMenu = new javax.swing.JMenuItem();
        consutarPedidosMenu = new javax.swing.JMenuItem();
        menuEmpleado = new javax.swing.JMenu();
        darAltaEmpleadoMenu = new javax.swing.JMenuItem();
        darBajaEmpleadoMenu = new javax.swing.JMenuItem();
        menuEncargado = new javax.swing.JMenu();
        darAltaEncargadoMenu = new javax.swing.JMenuItem();
        darBajaEncargadoMenu = new javax.swing.JMenuItem();
        registroVentas = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrincipal.setLayout(new java.awt.BorderLayout());

        carritoLabel.setFont(new java.awt.Font("Arial", 2, 24)); // NOI18N
        carritoLabel.setText("CARRITO");

        tablaCarrito.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tablaCarrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        panelConScrollCarrito.setViewportView(tablaCarrito);

        totalLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        totalLabel.setText("Total:");

        totalConPuntosLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        totalConPuntosLabel.setText("Total con puntos:");

        labelTotalAEditar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelTotalAEditar.setText("0 $");
        
        labelTotalConPuntosAEditar.setFont(new java.awt.Font("Tahoma", 0, 14));
        labelTotalConPuntosAEditar.setText("0 $");

        botonRealizarCompra.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonRealizarCompra.setText("Realizar compra");
        botonRealizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRealizarCompraActionPerformed(evt);
            }
        });

        botonEliminarDelCarrito.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonEliminarDelCarrito.setText("Eliminar del carrito");
        botonEliminarDelCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarDelCarritoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelIzdaLayout = new javax.swing.GroupLayout(panelIzda);
        panelIzda.setLayout(panelIzdaLayout);
        panelIzdaLayout.setHorizontalGroup(
            panelIzdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIzdaLayout.createSequentialGroup()
                .addGroup(panelIzdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelIzdaLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(panelIzdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelIzdaLayout.createSequentialGroup()
                                .addComponent(botonEliminarDelCarrito)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                                .addComponent(botonRealizarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelIzdaLayout.createSequentialGroup()
                                .addGroup(panelIzdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panelIzdaLayout.createSequentialGroup()
                                        .addComponent(totalLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(labelTotalAEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelIzdaLayout.createSequentialGroup()
                                        .addComponent(totalConPuntosLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                        .addComponent(labelTotalConPuntosAEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelIzdaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelIzdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panelConScrollCarrito, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
            .addGroup(panelIzdaLayout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(carritoLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelIzdaLayout.setVerticalGroup(
            panelIzdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIzdaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(carritoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelConScrollCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(panelIzdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(totalLabel)
                    .addComponent(labelTotalAEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelIzdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalConPuntosLabel)
                    .addComponent(labelTotalConPuntosAEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelIzdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonRealizarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelIzdaLayout.createSequentialGroup()
                        .addComponent(botonEliminarDelCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelPrincipal.add(panelIzda, java.awt.BorderLayout.LINE_START);

        tablaStock.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tablaStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        panelConScrollStock.setViewportView(tablaStock);

        botonAnadirCarrito.setIcon(new javax.swing.ImageIcon("C:\\hlocal\\ProyectoSCV\\src\\GUI\\carrito-de-la-compra.png")); // NOI18N
        botonAnadirCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAnadirCarritoActionPerformed(evt);
            }
        });

        labelAnadirCarrito.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelAnadirCarrito.setText("Añadir al carrito");

        javax.swing.GroupLayout panelInferiorLayout = new javax.swing.GroupLayout(panelInferior);
        panelInferior.setLayout(panelInferiorLayout);
        panelInferiorLayout.setHorizontalGroup(
            panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInferiorLayout.createSequentialGroup()
                .addGap(266, 266, 266)
                .addComponent(labelAnadirCarrito)
                .addGap(29, 29, 29)
                .addComponent(botonAnadirCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(259, Short.MAX_VALUE))
        );
        panelInferiorLayout.setVerticalGroup(
            panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInferiorLayout.createSequentialGroup()
                .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInferiorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(botonAnadirCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelInferiorLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(labelAnadirCarrito)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelMarca.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelMarca.setText("Marca");

        adidasCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        adidasCheckBox.setText("Adidas");
        adidasCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adidasCheckBoxActionPerformed(evt);
            }
        });

        pumaCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pumaCheckBox.setText("Puma");
        pumaCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pumaCheckBoxActionPerformed(evt);
            }
        });

        nikeCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nikeCheckBox.setText("Nike");
        nikeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nikeCheckBoxActionPerformed(evt);
            }
        });

        newBalanceCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        newBalanceCheckBox.setText("New Balance");
        newBalanceCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBalanceCheckBoxActionPerformed(evt);
            }
        });

        tallaLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tallaLabel.setText("Talla");

        tallaTexto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tallaTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tallaTextoActionPerformed(evt);
            }
        });

        modeloLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        modeloLabel.setText("Modelo");

        modeloTexto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        modeloTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modeloTextoActionPerformed(evt);
            }
        });

        precioLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        precioLabel.setText("Precio");

        precioTexto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        precioTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precioTextoActionPerformed(evt);
            }
        });

        botonFiltrar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botonFiltrar.setText("FILTRAR");
        botonFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFiltrarActionPerformed(evt);
            }
        });

        imagenNaik.setIcon(new javax.swing.ImageIcon("C:\\hlocal\\ProyectoSCV\\src\\GUI\\110359twzujvnw1nnle2br (1).jpg")); // NOI18N

        javax.swing.GroupLayout panelDerechaLayout = new javax.swing.GroupLayout(panelDerecha);
        panelDerecha.setLayout(panelDerechaLayout);
        panelDerechaLayout.setHorizontalGroup(
            panelDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator4)
            .addComponent(jSeparator5)
            .addComponent(jSeparator6)
            .addComponent(jSeparator7)
            .addComponent(jSeparator8)
            .addGroup(panelDerechaLayout.createSequentialGroup()
                .addGroup(panelDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDerechaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelMarca)
                            .addGroup(panelDerechaLayout.createSequentialGroup()
                                .addGroup(panelDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pumaCheckBox)
                                    .addComponent(adidasCheckBox))
                                .addGap(18, 18, 18)
                                .addGroup(panelDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nikeCheckBox)
                                    .addComponent(newBalanceCheckBox)))
                            .addComponent(tallaLabel)
                            .addComponent(tallaTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modeloLabel)
                            .addComponent(modeloTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precioLabel)
                            .addComponent(precioTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 21, Short.MAX_VALUE))
                    .addComponent(botonFiltrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(panelDerechaLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(imagenNaik)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelDerechaLayout.setVerticalGroup(
            panelDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDerechaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelMarca)
                .addGap(22, 22, 22)
                .addGroup(panelDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adidasCheckBox)
                    .addComponent(nikeCheckBox))
                .addGap(18, 18, 18)
                .addGroup(panelDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pumaCheckBox)
                    .addComponent(newBalanceCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(modeloLabel)
                .addGap(18, 18, 18)
                .addComponent(modeloTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tallaLabel)
                .addGap(18, 18, 18)
                .addComponent(tallaTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(precioLabel)
                .addGap(18, 18, 18)
                .addComponent(precioTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(imagenNaik)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout panelCentralLayout = new javax.swing.GroupLayout(panelCentral);
        panelCentral.setLayout(panelCentralLayout);
        panelCentralLayout.setHorizontalGroup(
            panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCentralLayout.createSequentialGroup()
                .addGroup(panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelConScrollStock, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(panelDerecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelCentralLayout.setVerticalGroup(
            panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCentralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCentralLayout.createSequentialGroup()
                        .addComponent(panelDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelCentralLayout.createSequentialGroup()
                        .addComponent(panelConScrollStock, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelInferior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        panelPrincipal.add(panelCentral, java.awt.BorderLayout.CENTER);

        menuUsuario.setText("Usuario");
        menuUsuario.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        consultarPuntosMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        consultarPuntosMenu.setText("Consultar puntos");
        consultarPuntosMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarPuntosMenuActionPerformed(evt);
            }
        });
        menuUsuario.add(consultarPuntosMenu);

        modificarDatosMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        modificarDatosMenu.setText("Modificar datos");
        modificarDatosMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarDatosMenuActionPerformed(evt);
            }
        });
        menuUsuario.add(modificarDatosMenu);

        darseDeBajaMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        darseDeBajaMenu.setText("Darse de baja");
        darseDeBajaMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                darseDeBajaMenuActionPerformed(evt);
            }
        });
        menuUsuario.add(darseDeBajaMenu);

        darDeBajaAMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        darDeBajaAMenu.setText("Dar de baja a");
        darDeBajaAMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                darDeBajaAMenuActionPerformed(evt);
            }
        });
        menuUsuario.add(darDeBajaAMenu);
        menuUsuario.add(jSeparator3);

        cerrarSesionMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cerrarSesionMenu.setText("Cerrar sesión");
        cerrarSesionMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesionMenuActionPerformed(evt);
            }
        });
        menuUsuario.add(cerrarSesionMenu);

        barraMenu.add(menuUsuario);

        menuStock.setText("Stock");
        menuStock.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        realizarDevolucionMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        realizarDevolucionMenu.setText("Realizar devolución");
        realizarDevolucionMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                realizarDevolucionMenuActionPerformed(evt);
            }
        });
        menuStock.add(realizarDevolucionMenu);

        altaProductoMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        altaProductoMenu.setText("Alta Producto");
        altaProductoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                altaProductoMenuActionPerformed(evt);
            }
        });
        menuStock.add(altaProductoMenu);

        bajaProductoMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bajaProductoMenu.setText("Baja Producto");
        bajaProductoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bajaProductoMenuActionPerformed(evt);
            }
        });
        menuStock.add(bajaProductoMenu);

        consutarPedidosMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        consutarPedidosMenu.setText("Consultar pedidos");
        consutarPedidosMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consutarPedidosMenuActionPerformed(evt);
            }
        });
        menuStock.add(consutarPedidosMenu);
        
        registroVentas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        registroVentas.setText("Registro de ventas");
        registroVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registroVentasActionPerformed(evt);
            }
        });
        
        menuStock.add(registroVentas);

        barraMenu.add(menuStock);

        menuEmpleado.setText("Empleado");
        menuEmpleado.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        darAltaEmpleadoMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        darAltaEmpleadoMenu.setText("Dar alta empleado");
        darAltaEmpleadoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                darAltaEmpleadoMenuActionPerformed(evt);
            }
        });
        
        menuEmpleado.add(darAltaEmpleadoMenu);

        darBajaEmpleadoMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        darBajaEmpleadoMenu.setText("Consultar usuarios");
        darBajaEmpleadoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                darBajaEmpleadoMenuActionPerformed(evt);
            }
        });
        menuEmpleado.add(darBajaEmpleadoMenu);

        barraMenu.add(menuEmpleado);

        menuEncargado.setText("Encargado");
        menuEncargado.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        darAltaEncargadoMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        darAltaEncargadoMenu.setText("Dar alta encargado");
        darAltaEncargadoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                darAltaEncargadoMenuActionPerformed(evt);
            }
        });
        menuEncargado.add(darAltaEncargadoMenu);

        darBajaEncargadoMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        darBajaEncargadoMenu.setText("Consultar usuarios");
        darBajaEncargadoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                darBajaEncargadoMenuActionPerformed(evt);
            }
        });
        menuEncargado.add(darBajaEncargadoMenu);

        barraMenu.add(menuEncargado);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        
        this.darDeBajaAMenu.setVisible(false);
        
        if(this.usuario.getTipo().equals("Usuario")) {
        	this.darDeBajaAMenu.setVisible(false);
        	this.altaProductoMenu.setVisible(false);
        	this.bajaProductoMenu.setVisible(false);
        	this.consutarPedidosMenu.setVisible(false);
        	this.registroVentas.setVisible(false);
        	this.menuEmpleado.setVisible(false);
        	this.menuEncargado.setVisible(false);
        }
        
        if(this.usuario.getTipo().equals("Empleado")){
        	this.altaProductoMenu.setVisible(false);
        	this.bajaProductoMenu.setVisible(false);
        	this.menuEncargado.setVisible(false);
        	this.darAltaEmpleadoMenu.setVisible(false);
        }
        
        this.setLocation(300, 150);
    }                      

    /**
     * 
     * @param evt
     */
    private void consultarPuntosMenuActionPerformed(java.awt.event.ActionEvent evt) {       
    	int puntos = 0;
		try {
			puntos = this.controllerCompraVenta.consultarPuntos(this.usuario.getNick());
		} catch (SQLException e) {
			e.printStackTrace();
		}
    	JOptionPane.showMessageDialog(this,
    			"Los puntos totales del usuario " + this.usuario.getNick() + " son " + puntos,
    			"Puntos",
    			JOptionPane.INFORMATION_MESSAGE);
    }                                                   

    /**
     * 
     * @param evt
     */
    private void modificarDatosMenuActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        this.setVisible(false);
        this.modificarDatos = new modificarDatos(this, this.controlUsu, this.usuario);
        this.modificarDatos.setVisible(true);
    }                        
    
    /**
     * 
     * @param usu
     */
    public void actualizarUsu(Usuario usu) {
    	if(!usu.getNombre().equals("")) {
    		this.usuario.setNombre(usu.getNombre());
    	}
    	if(!usu.getApellidos().equals("")) {
    		this.usuario.setApellidos(usu.getApellidos());
    	}
    	if(!usu.getcontraseña().equals("")) {
    		this.usuario.setcontraseña(usu.getcontraseña());
    	}
    	if(!usu.getCorreo().equals("")) {
    		this.usuario.setCorreo(usu.getCorreo());
    	}
    	if(!usu.getTelefono().equals("")) {
    		this.usuario.setTelefono(usu.getTelefono());
    	}
    }

    /**
     * 
     * @param evt
     */
    private void darseDeBajaMenuActionPerformed(java.awt.event.ActionEvent evt) {                                                
        try {
        	Object[] options1 = { "Yes", "No"};
        	int n = JOptionPane.showOptionDialog(this, "¿Está seguro que quiere darse de baja?", "Darse de baja", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
        			null,
        			null,
        			null);
        	if(n == 0) {
 
				this.controlUsu.darseBaja(this.usuario);
				this.setVisible(false);
				this.login = new LoginFrame(this.controlUsu, this.controllerCompraVenta, this.controllerStock);
				this.login.setVisible(true);
        	}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this,
						e.getMessage(),
						"Error",
						JOptionPane.ERROR_MESSAGE);
		}
    }                                               

    /**
     * 
     * @param evt
     */
    private void darDeBajaAMenuActionPerformed(java.awt.event.ActionEvent evt) {                                               
       this.darDeBaja = new DarDeBajaA(this.usuario, this.controlUsu);
       this.darDeBaja.setVisible(true);
    }                                              

    /**
     * 
     * @param evt
     */
    private void cerrarSesionMenuActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        this.setVisible(false);
        this.login = new LoginFrame(this.controlUsu, this.controllerCompraVenta, this.controllerStock);
        this.login.setVisible(true);
        try {
			this.controlUsu.cerrarSesion();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }                                                

    /**
     * 
     * @param evt
     */
    private void realizarDevolucionMenuActionPerformed(java.awt.event.ActionEvent evt) {                                                       
       this.devolucion = new Devolucion(this, this.usuario, this.controllerCompraVenta);
       this.setVisible(false);
       this.devolucion.setVisible(true);
    }                                                      

    /**
     * 
     * @param evt
     */
    private void altaProductoMenuActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        this.altaProducto = new AltaProducto(this, this.controllerStock);
        this.setVisible(false);
        this.altaProducto.setVisible(true);
    }                                                

    /**
     * 
     * @param evt
     */
    private void bajaProductoMenuActionPerformed(java.awt.event.ActionEvent evt) {                                                 

    	DefaultTableModel tm = (DefaultTableModel) this.tablaStock.getModel();
		int j[] = this.tablaStock.getSelectedRows();
		
		if(j.length == 0) {
			JOptionPane.showMessageDialog(this,
					"Tienes que seleccionar algun producto !",
					"Error",
					JOptionPane.ERROR_MESSAGE);
		}
    	
		else {
    	Object[] options1 = { "Yes", "No"};
    	int n = JOptionPane.showOptionDialog(this, "¿ Estas seguro que quieres dar de baja los productos seleccionados ?", "Dar de baja", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
    			null,
    			null,
    			null);
    	
    	if(n == 0) {
    	
    		for (int i = 0; i < j.length; i++) {
    	   		String idProducto = String.valueOf(tm.getValueAt(j[i],0));
       		
       			try {
       				this.controllerStock.bajaProducto(idProducto);
       			} catch (SQLException e) {
					e.printStackTrace();
				}
       		}	
       		JOptionPane.showMessageDialog(this,
					"Los productos se han dado correctamente de baja !",
					"Éxito",
					JOptionPane.INFORMATION_MESSAGE);
       		this.actualizarTablaPrincipal();
       		this.actualizarTablaCarrito();
       		DefaultTableModel tb = (DefaultTableModel) this.tablaCarrito.getModel();
       		double precioTotal = 0;
       		double precioDescuento = 0;
       		for(int k = 0; k < this.tablaCarrito.getRowCount(); k++) {
       			double precio2 = Double.parseDouble(String.valueOf(tb.getValueAt(k,4)));
           		int cantidad2 = Integer.parseInt(String.valueOf(tb.getValueAt(k,5)));
           		precioTotal += precio2 * cantidad2;
       		}
       		this.labelTotalAEditar.setText(Double.toString(precioTotal) + " $");
       		precioDescuento = precioTotal - this.usuario.getPuntos();
       		if(precioDescuento < 0)
       			precioDescuento = 0;
       		this.labelTotalConPuntosAEditar.setText(Double.toString(precioDescuento) + " $");
    		}
		}
    }                                                

    /**
     * 
     * @param evt
     */
    private void consutarPedidosMenuActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        this.pedidos = new ConsultarPedidos(this, this.controllerCompraVenta);
        this.setVisible(false);
        this.pedidos.setVisible(true);
    }           
    
    /**
     * 
     * @param evt
     */
    private void registroVentasActionPerformed(java.awt.event.ActionEvent evt) {
    	this.ventas = new RegistroVentas(this, this.controllerCompraVenta);
    	this.setVisible(false);
    	this.ventas.setVisible(true);
    	
    }

    /**
     * 
     * @param evt
     */
    private void darAltaEmpleadoMenuActionPerformed(java.awt.event.ActionEvent evt) {                                                    
    	  this.altaEmpleado = new AltaEmpleado(this, this.controlUsu);
          this.setVisible(false);
          this.altaEmpleado.setVisible(true);
    }                                                   

    /**
     * 
     * @param evt
     */
    private void darBajaEmpleadoMenuActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        this.bajaEmpleado = new ConsultarUsuarios(this, this.controlUsu, this.usuario);
        this.bajaEmpleado.setVisible(true);
        this.setVisible(false);
    }                                                   

    /**
     * 
     * @param evt
     */
    private void darAltaEncargadoMenuActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        this.altaEncargado = new AltaEncargados(this, this.controlUsu);
        this.setVisible(false);
        this.altaEncargado.setVisible(true);
    }                                                    

    /**
     * 
     * @param evt
     */
    private void darBajaEncargadoMenuActionPerformed(java.awt.event.ActionEvent evt) {                                                     
    	 this.bajaEncargado = new ConsultarUsuarios(this, this.controlUsu, this.usuario);
         this.bajaEncargado.setVisible(true);
         this.setVisible(false);
         
    	
    }                                                    

    /**
     * 
     * @param evt
     */
    private void botonAnadirCarritoActionPerformed(java.awt.event.ActionEvent evt) {     
    	DefaultTableModel tm = (DefaultTableModel) this.tablaStock.getModel();
    	int j[] = this.tablaStock.getSelectedRows();
    	
       for (int i = 0; i < j.length; i++) {
    	   	String idProducto = String.valueOf(tm.getValueAt(j[i],0));
       		String marca = String.valueOf(tm.getValueAt(j[i],1));
       		String modelo = String.valueOf(tm.getValueAt(j[i],2));
       		double talla = Double.parseDouble(String.valueOf(tm.getValueAt(j[i],3)));
       		double precio = Double.parseDouble(String.valueOf(tm.getValueAt(j[i],4)));
       		int cantidad = Integer.parseInt(String.valueOf(tm.getValueAt(j[i],5)));
       		Producto p = new Producto(idProducto, marca, modelo, talla, precio, cantidad);
       		if(cantidad == 0)
       			JOptionPane.showMessageDialog(this,
    			    	"No puedes añadir al carrito el producto " + marca + " " + modelo + " " + talla + " porque no hay stock",
    			    	"Error",
    			    	JOptionPane.ERROR_MESSAGE);
       		else {
       			AnadirCarrito prueba = new AnadirCarrito(this, true, this, p, this.usuario, this.controllerCompraVenta);
       			prueba.setVisible(true);
       		}
       			
       		this.actualizarTablaCarrito();
       		DefaultTableModel tb = (DefaultTableModel) this.tablaCarrito.getModel();
       		double precioTotal = 0;
       		double precioDescuento = 0;
       		for(int k = 0; k < this.tablaCarrito.getRowCount(); k++) {
       			double precio2 = Double.parseDouble(String.valueOf(tb.getValueAt(k,4)));
           		int cantidad2 = Integer.parseInt(String.valueOf(tb.getValueAt(k,5)));
           		precioTotal += precio2 * cantidad2;
       		}
       		this.labelTotalAEditar.setText(Double.toString(precioTotal) + " $");
       		precioDescuento = precioTotal - this.usuario.getPuntos();
       		if(precioDescuento < 0)
       			precioDescuento = 0;
       		this.labelTotalConPuntosAEditar.setText(Double.toString(precioDescuento) + " $");
       }
       
   	   
    }                                                  

    /**
     * 
     * @param evt
     */
    private void botonEliminarDelCarritoActionPerformed(java.awt.event.ActionEvent evt) {                                                        
    	DefaultTableModel tm = (DefaultTableModel) this.tablaCarrito.getModel();
    	int j[] = this.tablaCarrito.getSelectedRows();
    	
       for (int i = 0; i < j.length; i++) {
    	   	String idProducto = String.valueOf(tm.getValueAt(j[i],0));
       		String marca = String.valueOf(tm.getValueAt(j[i],1));
       		String modelo = String.valueOf(tm.getValueAt(j[i],2));
       		double talla = Double.parseDouble(String.valueOf(tm.getValueAt(j[i],3)));
       		double precio = Double.parseDouble(String.valueOf(tm.getValueAt(j[i],4)));
       		int cantidad = Integer.parseInt(String.valueOf(tm.getValueAt(j[i],5)));
       		Producto p = new Producto(idProducto, marca, modelo, talla, precio, cantidad);
       		
       		EliminarCarrito prueba = new EliminarCarrito(this, true, this, p, this.usuario, this.controllerCompraVenta);
       		prueba.setVisible(true);
      		
       }
       this.actualizarTablaCarrito();
       DefaultTableModel tb = (DefaultTableModel) this.tablaCarrito.getModel();
       double precioTotal = 0;
       double precioDescuento = 0;
  		for(int k = 0; k < this.tablaCarrito.getRowCount(); k++) {
  			double precio2 = Double.parseDouble(String.valueOf(tb.getValueAt(k,4)));
      		int cantidad2 = Integer.parseInt(String.valueOf(tb.getValueAt(k,5)));
      		precioTotal += precio2 * cantidad2;
  		}
  		this.labelTotalAEditar.setText(Double.toString(precioTotal) + " $");
  		precioDescuento = precioTotal - this.usuario.getPuntos();
  		if(precioDescuento < 0)
  			precioDescuento = 0;
  		this.labelTotalConPuntosAEditar.setText(Double.toString(precioDescuento) + " $");
  		this.actualizarTablaCarrito();
    }                                                       

    /**
     * 
     * @param evt
     */
    private void botonRealizarCompraActionPerformed(java.awt.event.ActionEvent evt) {    
    	int puntosAnteriores = this.usuario.getPuntos();
    	if(this.tablaCarrito.getRowCount() != 0) {
        try {
        	if(usuario.getPuntos() != 0) {
        		Object[] options1 = { "Yes", "No"};
        		int n = JOptionPane.showOptionDialog(this, "¿ Quieres canjear los puntos ?", "Canjear puntos", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
        				null,
        				null,
        				null);
        		if(n == 0) { // Se canjean puntos
        			this.controllerCompraVenta.canjearPuntos(this.usuario.getNick());
        			this.controllerCompraVenta.realizarCompra(this.usuario.getNick());
        			this.actualizarTablaCarrito();
        			this.actualizarTablaPrincipal();
        			this.labelTotalAEditar.setText("0 $");
        			this.labelTotalConPuntosAEditar.setText("0 $");
        			this.usuario.setPuntos(this.controllerCompraVenta.consultarPuntos(this.usuario.getNick()));
        			JOptionPane.showMessageDialog(this,
        					"Compra realizada con éxito, has acumulado: " + this.usuario.getPuntos() + " puntos",
        					"Exito",
        					JOptionPane.INFORMATION_MESSAGE);
        		}
        		else { // No se canjean puntos
        			this.controllerCompraVenta.realizarCompra(this.usuario.getNick());
        			this.actualizarTablaCarrito();
        			this.actualizarTablaPrincipal();
        			this.labelTotalAEditar.setText("0 $");
        			this.labelTotalConPuntosAEditar.setText("0 $");
        			this.usuario.setPuntos(this.controllerCompraVenta.consultarPuntos(this.usuario.getNick()));
        			int puntos = this.usuario.getPuntos() - puntosAnteriores;
        			JOptionPane.showMessageDialog(this,
        					"Compra realizada con éxito, has acumulado: " + puntos + " puntos",
        					"Exito",
        					JOptionPane.INFORMATION_MESSAGE);
        		}
        	}
        	else {
        		this.controllerCompraVenta.realizarCompra(this.usuario.getNick());
    			this.actualizarTablaCarrito();
    			this.actualizarTablaPrincipal();
    			this.labelTotalAEditar.setText("0 $");
    			this.labelTotalConPuntosAEditar.setText("0 $");
    			this.usuario.setPuntos(this.controllerCompraVenta.consultarPuntos(this.usuario.getNick()));
        		JOptionPane.showMessageDialog(this,
    					"Tenías 0 puntos y acabas de acumular: " + this.usuario.getPuntos() + " puntos !",
    					"Exito",
    					JOptionPane.INFORMATION_MESSAGE);
        	}
        	
		} catch (IOException | SQLException e) {
			
			e.printStackTrace();
		}
    	}
    	else {
    		JOptionPane.showMessageDialog(this,
					"Para comprar tienes que añadir algun producto al carrito !",
					"Error",
					JOptionPane.ERROR_MESSAGE);
    	}
    }                                                   

    /**
     * 
     * @param evt
     */
    private void botonFiltrarActionPerformed(java.awt.event.ActionEvent evt) {     
    	String adidas = "";
    	String nike = "";
    	String puma = "";
    	String newBalance = "";
    	
    	if(this.adidasCheckBox.isSelected()) {
    		adidas = "Adidas";
    	}
    	
    	if(this.nikeCheckBox.isSelected()) {
    		nike = "Nike";
    	}
    	
    	if(this.pumaCheckBox.isSelected()) {
    		puma = "Puma";
    	}
    	
    	if(this.newBalanceCheckBox.isSelected()) {
    		newBalance = "New Balance";
    	}
    		
        String modelo = this.modeloTexto.getText();
        String talla = this.tallaTexto.getText();
        String precio = this.precioTexto.getText();
        
        try {
     
        	if(!precio.equals("")) {
        		Double.parseDouble(precio);
        		double precio2 = Double.valueOf(precio).doubleValue();
        		if(precio2 < 0)
        			throw new NumberFormatException();
        	}
        	if(!talla.equals("")) {
        	Double.parseDouble(talla);
        	double talla2 = Double.valueOf(talla).doubleValue();
        		if(talla2 < 0)
        			throw new NumberFormatException();
        	}
		
        	Filtro f = new Filtro(adidas, nike, puma, newBalance, modelo, talla, precio);
        	List<Producto> productos = new ArrayList<Producto>();
        	try {
        		productos = this.controllerCompraVenta.filtrar(f);
        		Iterator<Producto> itr = productos.iterator();
        		DefaultTableModel model = (DefaultTableModel) this.tablaStock.getModel();
        		int numColumn = model.getRowCount();
        		for(int i = numColumn - 1; i >= 0; i--){
        			model.removeRow(i);
        		}
        		while(itr.hasNext()) {
        			Producto p = itr.next();
        			//A�ADIR A LISTA PRINCIPAL
        			model.addRow(new Object[]{p.getId(), p.getMarca(), p.getModelo(), String.valueOf(p.getTalla()), String.valueOf(p.getPrecio()), String.valueOf(p.getCantidad())});
        		}
        	} catch (SQLException e) {
        		
        		e.printStackTrace();
        	}
        } catch (NumberFormatException e) {
        	JOptionPane.showMessageDialog(this,
					"El precio y la talla deben ser valores numericos y positivos",
					"Error",
					JOptionPane.ERROR_MESSAGE);
        }
    }                                            

    private void precioTextoActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void tallaTextoActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void modeloTextoActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void adidasCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void pumaCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void nikeCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void newBalanceCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
    }                                             
    
    /**
     * 
     */
    public void actualizarTablaPrincipal() {
		List<Producto> productos = new ArrayList<Producto>();
		try {
			
			productos = controllerStock.consultarStock();
			Iterator<Producto> itr = productos.iterator();
			DefaultTableModel model = (DefaultTableModel) this.tablaStock.getModel();
			int numColumn = model.getRowCount();
			for(int i = numColumn - 1; i >= 0; i--){
				model.removeRow(i);
			}
			while(itr.hasNext()) {
				Producto p = itr.next();
				//A�ADIR A LISTA PRINCIPAL
				model.addRow(new Object[]{p.getId(), p.getMarca(), p.getModelo(), String.valueOf(p.getTalla()), String.valueOf(p.getPrecio()), String.valueOf(p.getCantidad())});
			}
		} catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
		}
	}
	
    /**
     * 
     */
	public void actualizarTablaCarrito() {
		List<Producto> productos = new ArrayList<Producto>();
		try {
			productos = this.controllerCompraVenta.consultarCarrito();
			Iterator<Producto> itr = productos.iterator();
			DefaultTableModel model = (DefaultTableModel) this.tablaCarrito.getModel();
			int numColumn = model.getRowCount();
			for(int i = numColumn - 1; i >= 0; i--){
				model.removeRow(i);
			}
			while(itr.hasNext()) {
				Producto p = itr.next();
				//A�ADIR A LISTA PRINCIPAL
				model.addRow(new Object[]{p.getId(), p.getMarca(), p.getModelo(), String.valueOf(p.getTalla()), String.valueOf(p.getPrecio()), String.valueOf(p.getCantidad())});
			}
		} catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
		}
	}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JCheckBox adidasCheckBox;
    private javax.swing.JMenuItem altaProductoMenu;
    private javax.swing.JMenuItem bajaProductoMenu;
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JButton botonAnadirCarrito;
    private javax.swing.JButton botonEliminarDelCarrito;
    private javax.swing.JButton botonFiltrar;
    private javax.swing.JButton botonRealizarCompra;
    private javax.swing.JLabel carritoLabel;
    private javax.swing.JMenuItem cerrarSesionMenu;
    private javax.swing.JMenuItem consultarPuntosMenu;
    private javax.swing.JMenuItem consutarPedidosMenu;
    private javax.swing.JMenuItem darAltaEmpleadoMenu;
    private javax.swing.JMenuItem darAltaEncargadoMenu;
    private javax.swing.JMenuItem darBajaEmpleadoMenu;
    private javax.swing.JMenuItem darBajaEncargadoMenu;
    private javax.swing.JMenuItem darDeBajaAMenu;
    private javax.swing.JMenuItem darseDeBajaMenu;
    private javax.swing.JLabel imagenNaik;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLabel labelAnadirCarrito;
    private javax.swing.JLabel labelMarca;
    private javax.swing.JLabel labelTotalAEditar;
    private javax.swing.JLabel labelTotalConPuntosAEditar;
    private javax.swing.JMenu menuEmpleado;
    private javax.swing.JMenu menuEncargado;
    private javax.swing.JMenu menuStock;
    private javax.swing.JMenu menuUsuario;
    private javax.swing.JLabel modeloLabel;
    private javax.swing.JTextField modeloTexto;
    private javax.swing.JMenuItem modificarDatosMenu;
    private javax.swing.JCheckBox newBalanceCheckBox;
    private javax.swing.JCheckBox nikeCheckBox;
    private javax.swing.JPanel panelCentral;
    private javax.swing.JScrollPane panelConScrollCarrito;
    private javax.swing.JScrollPane panelConScrollStock;
    private javax.swing.JPanel panelDerecha;
    private javax.swing.JPanel panelInferior;
    private javax.swing.JPanel panelIzda;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JLabel precioLabel;
    private javax.swing.JTextField precioTexto;
    private javax.swing.JCheckBox pumaCheckBox;
    private javax.swing.JMenuItem realizarDevolucionMenu;
    private javax.swing.JTable tablaCarrito;
    private javax.swing.JTable tablaStock;
    private javax.swing.JLabel tallaLabel;
    private javax.swing.JTextField tallaTexto;
    private javax.swing.JLabel totalConPuntosLabel;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JMenuItem registroVentas;
    // End of variables declaration                   
}
